/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// Generated by unplugin-auto-import
// biome-ignore lint: disable
export {}
declare global {
  const COMMON_ELEMENTS: typeof import('./constants/htmlElements')['COMMON_ELEMENTS']
  const DEFAULT_DARK: typeof import('./composables/theme')['DEFAULT_DARK']
  const DEFAULT_LIGHT: typeof import('./composables/theme')['DEFAULT_LIGHT']
  const EffectScope: typeof import('vue')['EffectScope']
  const SELF_CLOSING_TAGS: typeof import('./constants/htmlElements')['SELF_CLOSING_TAGS']
  const V0_ELEVATION_KEY: typeof import('./composables/elevation')['V0_ELEVATION_KEY']
  const VUETIFY_0_ELEVATION_DEFAULTS: typeof import('./composables/elevation')['VUETIFY_0_ELEVATION_DEFAULTS']
  const VUETIFY_0_ELEVATION_KEY: typeof import('./composables/elevation')['VUETIFY_0_ELEVATION_KEY']
  const afterAll: typeof import('vitest')['afterAll']
  const afterEach: typeof import('vitest')['afterEach']
  const assert: typeof import('vitest')['assert']
  const beforeAll: typeof import('vitest')['beforeAll']
  const beforeEach: typeof import('vitest')['beforeEach']
  const chai: typeof import('vitest')['chai']
  const computed: typeof import('vue')['computed']
  const createApp: typeof import('vue')['createApp']
  const createElevation: typeof import('./composables/elevation')['createElevation']
  const createTheme: typeof import('./composables/theme')['createTheme']
  const customRef: typeof import('vue')['customRef']
  const defaultElevationGenerator: typeof import('./composables/elevation')['defaultElevationGenerator']
  const defineAsyncComponent: typeof import('vue')['defineAsyncComponent']
  const defineComponent: typeof import('vue')['defineComponent']
  const describe: typeof import('vitest')['describe']
  const effectScope: typeof import('vue')['effectScope']
  const expect: typeof import('vitest')['expect']
  const getCurrentInstance: typeof import('vue')['getCurrentInstance']
  const getCurrentInstanceName: typeof import('./utils/getCurrentInstanceName')['getCurrentInstanceName']
  const getCurrentScope: typeof import('vue')['getCurrentScope']
  const h: typeof import('vue')['h']
  const hexToRgba: typeof import('./composables/color')['hexToRgba']
  const hexaToRgba: typeof import('./composables/color')['hexaToRgba']
  const inject: typeof import('vue')['inject']
  const isProxy: typeof import('vue')['isProxy']
  const isReactive: typeof import('vue')['isReactive']
  const isReadonly: typeof import('vue')['isReadonly']
  const isRef: typeof import('vue')['isRef']
  const isSelfClosingTag: typeof import('./constants/htmlElements')['isSelfClosingTag']
  const it: typeof import('vitest')['it']
  const markRaw: typeof import('vue')['markRaw']
  const nextTick: typeof import('vue')['nextTick']
  const onActivated: typeof import('vue')['onActivated']
  const onBeforeMount: typeof import('vue')['onBeforeMount']
  const onBeforeUnmount: typeof import('vue')['onBeforeUnmount']
  const onBeforeUpdate: typeof import('vue')['onBeforeUpdate']
  const onDeactivated: typeof import('vue')['onDeactivated']
  const onErrorCaptured: typeof import('vue')['onErrorCaptured']
  const onMounted: typeof import('vue')['onMounted']
  const onRenderTracked: typeof import('vue')['onRenderTracked']
  const onRenderTriggered: typeof import('vue')['onRenderTriggered']
  const onScopeDispose: typeof import('vue')['onScopeDispose']
  const onServerPrefetch: typeof import('vue')['onServerPrefetch']
  const onUnmounted: typeof import('vue')['onUnmounted']
  const onUpdated: typeof import('vue')['onUpdated']
  const onWatcherCleanup: typeof import('vue')['onWatcherCleanup']
  const parseColor: typeof import('./composables/color')['parseColor']
  const provide: typeof import('vue')['provide']
  const provideElevation: typeof import('./composables/elevation')['provideElevation']
  const reactive: typeof import('vue')['reactive']
  const readonly: typeof import('vue')['readonly']
  const ref: typeof import('vue')['ref']
  const resolveComponent: typeof import('vue')['resolveComponent']
  const rgbToRgba: typeof import('./composables/color')['rgbToRgba']
  const rgbaToHexa: typeof import('./composables/color')['rgbaToHexa']
  const shallowReactive: typeof import('vue')['shallowReactive']
  const shallowReadonly: typeof import('vue')['shallowReadonly']
  const shallowRef: typeof import('vue')['shallowRef']
  const suite: typeof import('vitest')['suite']
  const test: typeof import('vitest')['test']
  const toCamelCase: typeof import('./utils/helpers')['toCamelCase']
  const toKebabCase: typeof import('./utils/helpers')['toKebabCase']
  const toRaw: typeof import('vue')['toRaw']
  const toRef: typeof import('vue')['toRef']
  const toRefs: typeof import('vue')['toRefs']
  const toValue: typeof import('vue')['toValue']
  const triggerRef: typeof import('vue')['triggerRef']
  const unref: typeof import('vue')['unref']
  const useAttrs: typeof import('vue')['useAttrs']
  const useBorder: typeof import('./composables/border')['useBorder']
  const useColor: typeof import('./composables/color')['useColor']
  const useContext: typeof import('./composables/context')['useContext']
  const useContrast: typeof import('./composables/contrast')['useContrast']
  const useCssModule: typeof import('vue')['useCssModule']
  const useCssVars: typeof import('vue')['useCssVars']
  const useDimensions: typeof import('./composables/dimensions')['useDimensions']
  const useElevation: typeof import('./composables/elevation')['useElevation']
  const useGroup: typeof import('./composables/group')['useGroup']
  const useGroupItem: typeof import('./composables/group')['useGroupItem']
  const useId: typeof import('vue')['useId']
  const useModel: typeof import('vue')['useModel']
  const useRounded: typeof import('./composables/rounded')['useRounded']
  const useSlots: typeof import('vue')['useSlots']
  const useSpacing: typeof import('./composables/spacing')['useSpacing']
  const useTemplateRef: typeof import('vue')['useTemplateRef']
  const vi: typeof import('vitest')['vi']
  const vitest: typeof import('vitest')['vitest']
  const watch: typeof import('vue')['watch']
  const watchEffect: typeof import('vue')['watchEffect']
  const watchPostEffect: typeof import('vue')['watchPostEffect']
  const watchSyncEffect: typeof import('vue')['watchSyncEffect']
}
// for type re-export
declare global {
  // @ts-ignore
  export type { Component, Slot, Slots, ComponentPublicInstance, ComputedRef, DirectiveBinding, ExtractDefaultPropTypes, ExtractPropTypes, ExtractPublicPropTypes, InjectionKey, PropType, Ref, MaybeRef, MaybeRefOrGetter, VNode, WritableComputedRef } from 'vue'
  import('vue')
  // @ts-ignore
  export type { BorderProps } from './composables/border'
  import('./composables/border')
  // @ts-ignore
  export type { ColorProps } from './composables/color'
  import('./composables/color')
  // @ts-ignore
  export type { DimensionProps } from './composables/dimensions'
  import('./composables/dimensions')
  // @ts-ignore
  export type { ElevationConfig, ElevationOptions, ElevationProps } from './composables/elevation'
  import('./composables/elevation')
  // @ts-ignore
  export type { GroupItem, GroupTicket, GroupContext, GroupOptions } from './composables/group'
  import('./composables/group')
  // @ts-ignore
  export type { RoundedProps } from './composables/rounded'
  import('./composables/rounded')
  // @ts-ignore
  export type { SpacingProps } from './composables/spacing'
  import('./composables/spacing')
  // @ts-ignore
  export type { Theme, ThemeOptions, ThemeProvider } from './composables/theme'
  import('./composables/theme')
  // @ts-ignore
  export type { HTMLElementName, SelfClosingElement } from './constants/htmlElements'
  import('./constants/htmlElements')
}

// for vue template auto import
import { UnwrapRef } from 'vue'
declare module 'vue' {
  interface GlobalComponents {}
  interface ComponentCustomProperties {
    readonly COMMON_ELEMENTS: UnwrapRef<typeof import('./constants/htmlElements')['COMMON_ELEMENTS']>
    readonly DEFAULT_DARK: UnwrapRef<typeof import('./composables/theme')['DEFAULT_DARK']>
    readonly DEFAULT_LIGHT: UnwrapRef<typeof import('./composables/theme')['DEFAULT_LIGHT']>
    readonly EffectScope: UnwrapRef<typeof import('vue')['EffectScope']>
    readonly SELF_CLOSING_TAGS: UnwrapRef<typeof import('./constants/htmlElements')['SELF_CLOSING_TAGS']>
    readonly V0_ELEVATION_KEY: UnwrapRef<typeof import('./composables/elevation')['V0_ELEVATION_KEY']>
    readonly afterAll: UnwrapRef<typeof import('vitest')['afterAll']>
    readonly afterEach: UnwrapRef<typeof import('vitest')['afterEach']>
    readonly assert: UnwrapRef<typeof import('vitest')['assert']>
    readonly beforeAll: UnwrapRef<typeof import('vitest')['beforeAll']>
    readonly beforeEach: UnwrapRef<typeof import('vitest')['beforeEach']>
    readonly chai: UnwrapRef<typeof import('vitest')['chai']>
    readonly computed: UnwrapRef<typeof import('vue')['computed']>
    readonly createApp: UnwrapRef<typeof import('vue')['createApp']>
    readonly createElevation: UnwrapRef<typeof import('./composables/elevation')['createElevation']>
    readonly createTheme: UnwrapRef<typeof import('./composables/theme')['createTheme']>
    readonly customRef: UnwrapRef<typeof import('vue')['customRef']>
    readonly defaultElevationGenerator: UnwrapRef<typeof import('./composables/elevation')['defaultElevationGenerator']>
    readonly defineAsyncComponent: UnwrapRef<typeof import('vue')['defineAsyncComponent']>
    readonly defineComponent: UnwrapRef<typeof import('vue')['defineComponent']>
    readonly describe: UnwrapRef<typeof import('vitest')['describe']>
    readonly effectScope: UnwrapRef<typeof import('vue')['effectScope']>
    readonly expect: UnwrapRef<typeof import('vitest')['expect']>
    readonly getCurrentInstance: UnwrapRef<typeof import('vue')['getCurrentInstance']>
    readonly getCurrentInstanceName: UnwrapRef<typeof import('./utils/getCurrentInstanceName')['getCurrentInstanceName']>
    readonly getCurrentScope: UnwrapRef<typeof import('vue')['getCurrentScope']>
    readonly h: UnwrapRef<typeof import('vue')['h']>
    readonly hexToRgba: UnwrapRef<typeof import('./composables/color')['hexToRgba']>
    readonly hexaToRgba: UnwrapRef<typeof import('./composables/color')['hexaToRgba']>
    readonly inject: UnwrapRef<typeof import('vue')['inject']>
    readonly isProxy: UnwrapRef<typeof import('vue')['isProxy']>
    readonly isReactive: UnwrapRef<typeof import('vue')['isReactive']>
    readonly isReadonly: UnwrapRef<typeof import('vue')['isReadonly']>
    readonly isRef: UnwrapRef<typeof import('vue')['isRef']>
    readonly isSelfClosingTag: UnwrapRef<typeof import('./constants/htmlElements')['isSelfClosingTag']>
    readonly it: UnwrapRef<typeof import('vitest')['it']>
    readonly markRaw: UnwrapRef<typeof import('vue')['markRaw']>
    readonly nextTick: UnwrapRef<typeof import('vue')['nextTick']>
    readonly onActivated: UnwrapRef<typeof import('vue')['onActivated']>
    readonly onBeforeMount: UnwrapRef<typeof import('vue')['onBeforeMount']>
    readonly onBeforeUnmount: UnwrapRef<typeof import('vue')['onBeforeUnmount']>
    readonly onBeforeUpdate: UnwrapRef<typeof import('vue')['onBeforeUpdate']>
    readonly onDeactivated: UnwrapRef<typeof import('vue')['onDeactivated']>
    readonly onErrorCaptured: UnwrapRef<typeof import('vue')['onErrorCaptured']>
    readonly onMounted: UnwrapRef<typeof import('vue')['onMounted']>
    readonly onRenderTracked: UnwrapRef<typeof import('vue')['onRenderTracked']>
    readonly onRenderTriggered: UnwrapRef<typeof import('vue')['onRenderTriggered']>
    readonly onScopeDispose: UnwrapRef<typeof import('vue')['onScopeDispose']>
    readonly onServerPrefetch: UnwrapRef<typeof import('vue')['onServerPrefetch']>
    readonly onUnmounted: UnwrapRef<typeof import('vue')['onUnmounted']>
    readonly onUpdated: UnwrapRef<typeof import('vue')['onUpdated']>
    readonly onWatcherCleanup: UnwrapRef<typeof import('vue')['onWatcherCleanup']>
    readonly parseColor: UnwrapRef<typeof import('./composables/color')['parseColor']>
    readonly provide: UnwrapRef<typeof import('vue')['provide']>
    readonly reactive: UnwrapRef<typeof import('vue')['reactive']>
    readonly readonly: UnwrapRef<typeof import('vue')['readonly']>
    readonly ref: UnwrapRef<typeof import('vue')['ref']>
    readonly resolveComponent: UnwrapRef<typeof import('vue')['resolveComponent']>
    readonly rgbToRgba: UnwrapRef<typeof import('./composables/color')['rgbToRgba']>
    readonly rgbaToHexa: UnwrapRef<typeof import('./composables/color')['rgbaToHexa']>
    readonly shallowReactive: UnwrapRef<typeof import('vue')['shallowReactive']>
    readonly shallowReadonly: UnwrapRef<typeof import('vue')['shallowReadonly']>
    readonly shallowRef: UnwrapRef<typeof import('vue')['shallowRef']>
    readonly suite: UnwrapRef<typeof import('vitest')['suite']>
    readonly test: UnwrapRef<typeof import('vitest')['test']>
    readonly toCamelCase: UnwrapRef<typeof import('./utils/helpers')['toCamelCase']>
    readonly toKebabCase: UnwrapRef<typeof import('./utils/helpers')['toKebabCase']>
    readonly toRaw: UnwrapRef<typeof import('vue')['toRaw']>
    readonly toRef: UnwrapRef<typeof import('vue')['toRef']>
    readonly toRefs: UnwrapRef<typeof import('vue')['toRefs']>
    readonly toValue: UnwrapRef<typeof import('vue')['toValue']>
    readonly triggerRef: UnwrapRef<typeof import('vue')['triggerRef']>
    readonly unref: UnwrapRef<typeof import('vue')['unref']>
    readonly useAttrs: UnwrapRef<typeof import('vue')['useAttrs']>
    readonly useBorder: UnwrapRef<typeof import('./composables/border')['useBorder']>
    readonly useColor: UnwrapRef<typeof import('./composables/color')['useColor']>
    readonly useContext: UnwrapRef<typeof import('./composables/context')['useContext']>
    readonly useContrast: UnwrapRef<typeof import('./composables/contrast')['useContrast']>
    readonly useCssModule: UnwrapRef<typeof import('vue')['useCssModule']>
    readonly useCssVars: UnwrapRef<typeof import('vue')['useCssVars']>
    readonly useDimensions: UnwrapRef<typeof import('./composables/dimensions')['useDimensions']>
    readonly useElevation: UnwrapRef<typeof import('./composables/elevation')['useElevation']>
    readonly useGroup: UnwrapRef<typeof import('./composables/group')['useGroup']>
    readonly useId: UnwrapRef<typeof import('vue')['useId']>
    readonly useModel: UnwrapRef<typeof import('vue')['useModel']>
    readonly useRounded: UnwrapRef<typeof import('./composables/rounded')['useRounded']>
    readonly useSlots: UnwrapRef<typeof import('vue')['useSlots']>
    readonly useSpacing: UnwrapRef<typeof import('./composables/spacing')['useSpacing']>
    readonly useTemplateRef: UnwrapRef<typeof import('vue')['useTemplateRef']>
    readonly vi: UnwrapRef<typeof import('vitest')['vi']>
    readonly vitest: UnwrapRef<typeof import('vitest')['vitest']>
    readonly watch: UnwrapRef<typeof import('vue')['watch']>
    readonly watchEffect: UnwrapRef<typeof import('vue')['watchEffect']>
    readonly watchPostEffect: UnwrapRef<typeof import('vue')['watchPostEffect']>
    readonly watchSyncEffect: UnwrapRef<typeof import('vue')['watchSyncEffect']>
  }
}