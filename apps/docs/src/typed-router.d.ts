/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// Generated by unplugin-vue-router. ‼️ DO NOT MODIFY THIS FILE ‼️
// It's recommended to commit this file.
// Make sure to add this file to your tsconfig.json file as an "includes" or "files" entry.

declare module 'vue-router/auto-routes' {
  import type {
    RouteRecordInfo,
    ParamValue,
    ParamValueOneOrMore,
    ParamValueZeroOrMore,
    ParamValueZeroOrOne,
  } from 'vue-router'

  /**
   * Route name map generated by unplugin-vue-router
   */
  export interface RouteNamedMap {
    '/': RouteRecordInfo<'/', '/', Record<never, never>, Record<never, never>>,
    '/components/atom': RouteRecordInfo<'/components/atom', '/components/atom', Record<never, never>, Record<never, never>>,
    '/components/avatar': RouteRecordInfo<'/components/avatar', '/components/avatar', Record<never, never>, Record<never, never>>,
    '/components/breakpoints': RouteRecordInfo<'/components/breakpoints', '/components/breakpoints', Record<never, never>, Record<never, never>>,
    '/components/components': RouteRecordInfo<'/components/components', '/components/components', Record<never, never>, Record<never, never>>,
    '/components/context': RouteRecordInfo<'/components/context', '/components/context', Record<never, never>, Record<never, never>>,
    '/components/hydration': RouteRecordInfo<'/components/hydration', '/components/hydration', Record<never, never>, Record<never, never>>,
    '/components/popover': RouteRecordInfo<'/components/popover', '/components/popover', Record<never, never>, Record<never, never>>,
    '/components/step': RouteRecordInfo<'/components/step', '/components/step', Record<never, never>, Record<never, never>>,
    '/components/theme': RouteRecordInfo<'/components/theme', '/components/theme', Record<never, never>, Record<never, never>>,
    '/composables/': RouteRecordInfo<'/composables/', '/composables', Record<never, never>, Record<never, never>>,
    '/composables/forms/use-form': RouteRecordInfo<'/composables/forms/use-form', '/composables/forms/use-form', Record<never, never>, Record<never, never>>,
    '/composables/foundation/create-context': RouteRecordInfo<'/composables/foundation/create-context', '/composables/foundation/create-context', Record<never, never>, Record<never, never>>,
    '/composables/foundation/create-plugin': RouteRecordInfo<'/composables/foundation/create-plugin', '/composables/foundation/create-plugin', Record<never, never>, Record<never, never>>,
    '/composables/foundation/create-trinity': RouteRecordInfo<'/composables/foundation/create-trinity', '/composables/foundation/create-trinity', Record<never, never>, Record<never, never>>,
    '/composables/plugins/use-breakpoints': RouteRecordInfo<'/composables/plugins/use-breakpoints', '/composables/plugins/use-breakpoints', Record<never, never>, Record<never, never>>,
    '/composables/plugins/use-features': RouteRecordInfo<'/composables/plugins/use-features', '/composables/plugins/use-features', Record<never, never>, Record<never, never>>,
    '/composables/plugins/use-hydration': RouteRecordInfo<'/composables/plugins/use-hydration', '/composables/plugins/use-hydration', Record<never, never>, Record<never, never>>,
    '/composables/plugins/use-locale': RouteRecordInfo<'/composables/plugins/use-locale', '/composables/plugins/use-locale', Record<never, never>, Record<never, never>>,
    '/composables/plugins/use-logger': RouteRecordInfo<'/composables/plugins/use-logger', '/composables/plugins/use-logger', Record<never, never>, Record<never, never>>,
    '/composables/plugins/use-storage': RouteRecordInfo<'/composables/plugins/use-storage', '/composables/plugins/use-storage', Record<never, never>, Record<never, never>>,
    '/composables/plugins/use-theme': RouteRecordInfo<'/composables/plugins/use-theme', '/composables/plugins/use-theme', Record<never, never>, Record<never, never>>,
    '/composables/registration/use-registry': RouteRecordInfo<'/composables/registration/use-registry', '/composables/registration/use-registry', Record<never, never>, Record<never, never>>,
    '/composables/registration/use-tokens': RouteRecordInfo<'/composables/registration/use-tokens', '/composables/registration/use-tokens', Record<never, never>, Record<never, never>>,
    '/composables/selection/use-filter': RouteRecordInfo<'/composables/selection/use-filter', '/composables/selection/use-filter', Record<never, never>, Record<never, never>>,
    '/composables/selection/use-group': RouteRecordInfo<'/composables/selection/use-group', '/composables/selection/use-group', Record<never, never>, Record<never, never>>,
    '/composables/selection/use-selection': RouteRecordInfo<'/composables/selection/use-selection', '/composables/selection/use-selection', Record<never, never>, Record<never, never>>,
    '/composables/selection/use-single': RouteRecordInfo<'/composables/selection/use-single', '/composables/selection/use-single', Record<never, never>, Record<never, never>>,
    '/composables/selection/use-step': RouteRecordInfo<'/composables/selection/use-step', '/composables/selection/use-step', Record<never, never>, Record<never, never>>,
    '/composables/system/use-event-listener': RouteRecordInfo<'/composables/system/use-event-listener', '/composables/system/use-event-listener', Record<never, never>, Record<never, never>>,
    '/composables/system/use-keydown': RouteRecordInfo<'/composables/system/use-keydown', '/composables/system/use-keydown', Record<never, never>, Record<never, never>>,
    '/guide/': RouteRecordInfo<'/guide/', '/guide', Record<never, never>, Record<never, never>>,
    '/guide/accessibility': RouteRecordInfo<'/guide/accessibility', '/guide/accessibility', Record<never, never>, Record<never, never>>,
    '/guide/components': RouteRecordInfo<'/guide/components', '/guide/components', Record<never, never>, Record<never, never>>,
    '/guide/composables': RouteRecordInfo<'/guide/composables', '/guide/composables', Record<never, never>, Record<never, never>>,
    '/guide/features': RouteRecordInfo<'/guide/features', '/guide/features', Record<never, never>, Record<never, never>>,
    '/guide/framework-core': RouteRecordInfo<'/guide/framework-core', '/guide/framework-core', Record<never, never>, Record<never, never>>,
    '/guide/plugins': RouteRecordInfo<'/guide/plugins', '/guide/plugins', Record<never, never>, Record<never, never>>,
    '/guide/structure': RouteRecordInfo<'/guide/structure', '/guide/structure', Record<never, never>, Record<never, never>>,
    '/guide/theming': RouteRecordInfo<'/guide/theming', '/guide/theming', Record<never, never>, Record<never, never>>,
    '/guide/utilities': RouteRecordInfo<'/guide/utilities', '/guide/utilities', Record<never, never>, Record<never, never>>,
    '/introduction/contributing': RouteRecordInfo<'/introduction/contributing', '/introduction/contributing', Record<never, never>, Record<never, never>>,
    '/introduction/frequently-asked': RouteRecordInfo<'/introduction/frequently-asked', '/introduction/frequently-asked', Record<never, never>, Record<never, never>>,
    '/introduction/getting-started': RouteRecordInfo<'/introduction/getting-started', '/introduction/getting-started', Record<never, never>, Record<never, never>>,
    '/utilities/to-reactive': RouteRecordInfo<'/utilities/to-reactive', '/utilities/to-reactive', Record<never, never>, Record<never, never>>,
  }

  /**
   * Route file to route info map by unplugin-vue-router.
   * Used by the volar plugin to automatically type useRoute()
   *
   * Each key is a file path relative to the project root with 2 properties:
   * - routes: union of route names of the possible routes when in this page (passed to useRoute<...>())
   * - views: names of nested views (can be passed to <RouterView name="...">)
   *
   * @internal
   */
  export interface _RouteFileInfoMap {
    'src/pages/index.md': {
      routes: '/'
      views: never
    }
    'src/pages/components/atom.md': {
      routes: '/components/atom'
      views: never
    }
    'src/pages/components/avatar.md': {
      routes: '/components/avatar'
      views: never
    }
    'src/pages/components/breakpoints.md': {
      routes: '/components/breakpoints'
      views: never
    }
    'src/pages/components/components.md': {
      routes: '/components/components'
      views: never
    }
    'src/pages/components/context.md': {
      routes: '/components/context'
      views: never
    }
    'src/pages/components/hydration.md': {
      routes: '/components/hydration'
      views: never
    }
    'src/pages/components/popover.md': {
      routes: '/components/popover'
      views: never
    }
    'src/pages/components/step.md': {
      routes: '/components/step'
      views: never
    }
    'src/pages/components/theme.md': {
      routes: '/components/theme'
      views: never
    }
    'src/pages/composables/index.md': {
      routes: '/composables/'
      views: never
    }
    'src/pages/composables/forms/use-form.md': {
      routes: '/composables/forms/use-form'
      views: never
    }
    'src/pages/composables/foundation/create-context.md': {
      routes: '/composables/foundation/create-context'
      views: never
    }
    'src/pages/composables/foundation/create-plugin.md': {
      routes: '/composables/foundation/create-plugin'
      views: never
    }
    'src/pages/composables/foundation/create-trinity.md': {
      routes: '/composables/foundation/create-trinity'
      views: never
    }
    'src/pages/composables/plugins/use-breakpoints.md': {
      routes: '/composables/plugins/use-breakpoints'
      views: never
    }
    'src/pages/composables/plugins/use-features.md': {
      routes: '/composables/plugins/use-features'
      views: never
    }
    'src/pages/composables/plugins/use-hydration.md': {
      routes: '/composables/plugins/use-hydration'
      views: never
    }
    'src/pages/composables/plugins/use-locale.md': {
      routes: '/composables/plugins/use-locale'
      views: never
    }
    'src/pages/composables/plugins/use-logger.md': {
      routes: '/composables/plugins/use-logger'
      views: never
    }
    'src/pages/composables/plugins/use-storage.md': {
      routes: '/composables/plugins/use-storage'
      views: never
    }
    'src/pages/composables/plugins/use-theme.md': {
      routes: '/composables/plugins/use-theme'
      views: never
    }
    'src/pages/composables/registration/use-registry.md': {
      routes: '/composables/registration/use-registry'
      views: never
    }
    'src/pages/composables/registration/use-tokens.md': {
      routes: '/composables/registration/use-tokens'
      views: never
    }
    'src/pages/composables/selection/use-filter.md': {
      routes: '/composables/selection/use-filter'
      views: never
    }
    'src/pages/composables/selection/use-group.md': {
      routes: '/composables/selection/use-group'
      views: never
    }
    'src/pages/composables/selection/use-selection.md': {
      routes: '/composables/selection/use-selection'
      views: never
    }
    'src/pages/composables/selection/use-single.md': {
      routes: '/composables/selection/use-single'
      views: never
    }
    'src/pages/composables/selection/use-step.md': {
      routes: '/composables/selection/use-step'
      views: never
    }
    'src/pages/composables/system/use-event-listener.md': {
      routes: '/composables/system/use-event-listener'
      views: never
    }
    'src/pages/composables/system/use-keydown.md': {
      routes: '/composables/system/use-keydown'
      views: never
    }
    'src/pages/guide/index.md': {
      routes: '/guide/'
      views: never
    }
    'src/pages/guide/accessibility.md': {
      routes: '/guide/accessibility'
      views: never
    }
    'src/pages/guide/components.md': {
      routes: '/guide/components'
      views: never
    }
    'src/pages/guide/composables.md': {
      routes: '/guide/composables'
      views: never
    }
    'src/pages/guide/features.md': {
      routes: '/guide/features'
      views: never
    }
    'src/pages/guide/framework-core.md': {
      routes: '/guide/framework-core'
      views: never
    }
    'src/pages/guide/plugins.md': {
      routes: '/guide/plugins'
      views: never
    }
    'src/pages/guide/structure.md': {
      routes: '/guide/structure'
      views: never
    }
    'src/pages/guide/theming.md': {
      routes: '/guide/theming'
      views: never
    }
    'src/pages/guide/utilities.md': {
      routes: '/guide/utilities'
      views: never
    }
    'src/pages/introduction/contributing.md': {
      routes: '/introduction/contributing'
      views: never
    }
    'src/pages/introduction/frequently-asked.md': {
      routes: '/introduction/frequently-asked'
      views: never
    }
    'src/pages/introduction/getting-started.md': {
      routes: '/introduction/getting-started'
      views: never
    }
    'src/pages/utilities/to-reactive.md': {
      routes: '/utilities/to-reactive'
      views: never
    }
  }

  /**
   * Get a union of possible route names in a certain route component file.
   * Used by the volar plugin to automatically type useRoute()
   *
   * @internal
   */
  export type _RouteNamesForFilePath<FilePath extends string> =
    _RouteFileInfoMap extends Record<FilePath, infer Info>
      ? Info['routes']
      : keyof RouteNamedMap
}
